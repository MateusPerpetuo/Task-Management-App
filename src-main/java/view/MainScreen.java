/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import controller.ProjectController;
import controller.TaskController;
import java.awt.Color;
import java.awt.Font;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import view.NewProjectDialog;
import view.NewTaskDialog;
import model.Project;
import model.Task;
import util.ButtonColumnCellRender;
import util.DeadlineColumnCellRender;
import util.TaskTableModel;
import util.TextColumnCellRender;


/**
 *
 * @author mateus.perpetuo
 */
public class MainScreen extends javax.swing.JFrame {
    // Initializing controller variables to retrieve information from the database tables
    ProjectController projectController;
    TaskController taskController;
    
    // A model that defines the appearance of the list and the table grid.
    DefaultListModel projectsModel;
    TaskTableModel taskModel;

    /**
     * Creates new form MainScreen
     */
    public MainScreen() {
        initComponents();
        
        initDataController();
        initComponetsModel();        
        /** 
        * In order to the customized render has any effect, the decorateTableTask
        * must be inicialized after other components.  
        */
        decorateTableTask();        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        scrollTasks = new javax.swing.JScrollPane();
        tblTasks = new javax.swing.JTable();
        lblDeleteProject = new javax.swing.JLabel();
        pnlHead = new javax.swing.JPanel();
        lblHeadTitle = new javax.swing.JLabel();
        lblHeadSlogan = new javax.swing.JLabel();
        pnlProjectTitle = new javax.swing.JPanel();
        lblProjectTitle = new javax.swing.JLabel();
        btnAddProject = new javax.swing.JButton();
        pnlTaskTitle = new javax.swing.JPanel();
        lblTaskTitle = new javax.swing.JLabel();
        btnAddTask = new javax.swing.JButton();
        pnlProjectList = new javax.swing.JPanel();
        scrollProjects = new javax.swing.JScrollPane();
        lstProjects = new javax.swing.JList<>();
        btnDeleteProject = new javax.swing.JButton();
        pnlTaskList = new javax.swing.JPanel();
        pnlEmptyTask = new javax.swing.JPanel();
        lblEmptyTaskIcon = new javax.swing.JLabel();
        lblEmptyTask = new javax.swing.JLabel();
        lblNoTaskAdd = new javax.swing.JLabel();

        scrollTasks.setBackground(new java.awt.Color(0, 153, 102));
        scrollTasks.setBorder(null);
        scrollTasks.setForeground(java.awt.Color.white);

        tblTasks.setBackground(java.awt.Color.white);
        tblTasks.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        tblTasks.setForeground(java.awt.Color.black);
        tblTasks.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, "sdffsd", null, null},
                {null, "sdfsd", null, null},
                {null, "sdfsd", null, null},
                {null, "fgdfgd", null, null}
            },
            new String [] {
                "Name", "Description", "Deadline", "Task Completed"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblTasks.setGridColor(new java.awt.Color(204, 204, 204));
        tblTasks.setRowHeight(40);
        tblTasks.setSelectionBackground(new java.awt.Color(135, 230, 198));
        tblTasks.setSelectionForeground(new java.awt.Color(0, 0, 0));
        tblTasks.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tblTasks.setShowGrid(false);
        tblTasks.setShowHorizontalLines(true);
        tblTasks.getTableHeader().setResizingAllowed(false);
        tblTasks.getTableHeader().setReorderingAllowed(false);
        tblTasks.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblTasksMouseClicked(evt);
            }
        });
        scrollTasks.setViewportView(tblTasks);
        tblTasks.getAccessibleContext().setAccessibleDescription("Task list of the selected project");

        lblDeleteProject.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lblDeleteProject.setForeground(new java.awt.Color(191, 98, 98));
        lblDeleteProject.setText(" Delete Project");
        lblDeleteProject.setToolTipText("Click to dele the project");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Todo App");
        setIconImage(getIconImage());
        setIconImages(getIconImages());
        setMinimumSize(new java.awt.Dimension(1000, 800));
        setSize(new java.awt.Dimension(1000, 800));

        pnlHead.setBackground(new java.awt.Color(0, 153, 102));

        lblHeadTitle.setFont(new java.awt.Font("Segoe UI", 1, 48)); // NOI18N
        lblHeadTitle.setForeground(new java.awt.Color(255, 255, 255));
        lblHeadTitle.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/tick.png"))); // NOI18N
        lblHeadTitle.setText("  Todo App");

        lblHeadSlogan.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        lblHeadSlogan.setForeground(new java.awt.Color(255, 255, 255));
        lblHeadSlogan.setText("Write down everything, don't forget anything!");

        javax.swing.GroupLayout pnlHeadLayout = new javax.swing.GroupLayout(pnlHead);
        pnlHead.setLayout(pnlHeadLayout);
        pnlHeadLayout.setHorizontalGroup(
            pnlHeadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlHeadLayout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(pnlHeadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblHeadSlogan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblHeadTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnlHeadLayout.setVerticalGroup(
            pnlHeadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlHeadLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(lblHeadTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblHeadSlogan)
                .addGap(36, 36, 36))
        );

        pnlProjectTitle.setBackground(java.awt.Color.white);
        pnlProjectTitle.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 2, true));

        lblProjectTitle.setBackground(java.awt.Color.black);
        lblProjectTitle.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lblProjectTitle.setForeground(new java.awt.Color(0, 153, 102));
        lblProjectTitle.setText("Projects");

        btnAddProject.setBackground(java.awt.Color.white);
        btnAddProject.setForeground(java.awt.Color.white);
        btnAddProject.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/add.png"))); // NOI18N
        btnAddProject.setToolTipText("Add a new project");
        btnAddProject.setAlignmentX(0.2F);
        btnAddProject.setAlignmentY(0.2F);
        btnAddProject.setBorder(null);
        btnAddProject.setContentAreaFilled(false);
        btnAddProject.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAddProject.setIconTextGap(5);
        btnAddProject.setMargin(new java.awt.Insets(5, 14, 5, 14));
        btnAddProject.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnAddProjectMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout pnlProjectTitleLayout = new javax.swing.GroupLayout(pnlProjectTitle);
        pnlProjectTitle.setLayout(pnlProjectTitleLayout);
        pnlProjectTitleLayout.setHorizontalGroup(
            pnlProjectTitleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlProjectTitleLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(lblProjectTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnAddProject, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        pnlProjectTitleLayout.setVerticalGroup(
            pnlProjectTitleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlProjectTitleLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlProjectTitleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnAddProject)
                    .addComponent(lblProjectTitle))
                .addContainerGap())
        );

        pnlTaskTitle.setBackground(java.awt.Color.white);
        pnlTaskTitle.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 2, true));
        pnlTaskTitle.setMinimumSize(new java.awt.Dimension(336, 50));

        lblTaskTitle.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lblTaskTitle.setForeground(new java.awt.Color(0, 153, 102));
        lblTaskTitle.setText("Tasks");

        btnAddTask.setBackground(java.awt.Color.white);
        btnAddTask.setForeground(java.awt.Color.white);
        btnAddTask.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/add.png"))); // NOI18N
        btnAddTask.setToolTipText("Add a new task to the selected project");
        btnAddTask.setAlignmentX(0.2F);
        btnAddTask.setAlignmentY(0.2F);
        btnAddTask.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        btnAddTask.setBorderPainted(false);
        btnAddTask.setContentAreaFilled(false);
        btnAddTask.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAddTask.setFocusCycleRoot(true);
        btnAddTask.setIconTextGap(5);
        btnAddTask.setMargin(new java.awt.Insets(5, 14, 5, 14));
        btnAddTask.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnAddTaskMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout pnlTaskTitleLayout = new javax.swing.GroupLayout(pnlTaskTitle);
        pnlTaskTitle.setLayout(pnlTaskTitleLayout);
        pnlTaskTitleLayout.setHorizontalGroup(
            pnlTaskTitleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTaskTitleLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(lblTaskTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 380, Short.MAX_VALUE)
                .addComponent(btnAddTask, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        pnlTaskTitleLayout.setVerticalGroup(
            pnlTaskTitleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlTaskTitleLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlTaskTitleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnlTaskTitleLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnAddTask))
                    .addComponent(lblTaskTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pnlProjectList.setBackground(java.awt.Color.white);
        pnlProjectList.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 2, true));
        pnlProjectList.setMinimumSize(new java.awt.Dimension(51, 150));

        scrollProjects.setBorder(null);

        lstProjects.setBackground(java.awt.Color.white);
        lstProjects.setBorder(null);
        lstProjects.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lstProjects.setForeground(java.awt.Color.black);
        lstProjects.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        lstProjects.setFixedCellHeight(40);
        lstProjects.setSelectionBackground(new java.awt.Color(0, 153, 102));
        lstProjects.setSelectionForeground(java.awt.Color.white);
        lstProjects.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lstProjectsMouseClicked(evt);
            }
        });
        scrollProjects.setViewportView(lstProjects);

        btnDeleteProject.setBackground(new java.awt.Color(191, 98, 98));
        btnDeleteProject.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        btnDeleteProject.setForeground(java.awt.Color.white);
        btnDeleteProject.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/delete_red.png"))); // NOI18N
        btnDeleteProject.setText("Delete Project");
        btnDeleteProject.setToolTipText("Click to delete this project!");
        btnDeleteProject.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btnDeleteProject.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnDeleteProject.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        btnDeleteProject.setIconTextGap(50);
        btnDeleteProject.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnDeleteProjectMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout pnlProjectListLayout = new javax.swing.GroupLayout(pnlProjectList);
        pnlProjectList.setLayout(pnlProjectListLayout);
        pnlProjectListLayout.setHorizontalGroup(
            pnlProjectListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(scrollProjects)
            .addComponent(btnDeleteProject, javax.swing.GroupLayout.DEFAULT_SIZE, 283, Short.MAX_VALUE)
        );
        pnlProjectListLayout.setVerticalGroup(
            pnlProjectListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlProjectListLayout.createSequentialGroup()
                .addComponent(scrollProjects, javax.swing.GroupLayout.PREFERRED_SIZE, 515, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnDeleteProject, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pnlTaskList.setBackground(java.awt.Color.white);
        pnlTaskList.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 2, true));
        pnlTaskList.setMinimumSize(new java.awt.Dimension(378, 200));
        pnlTaskList.setPreferredSize(new java.awt.Dimension(378, 200));
        pnlTaskList.setLayout(new java.awt.BorderLayout());

        pnlEmptyTask.setBackground(java.awt.Color.white);

        lblEmptyTaskIcon.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblEmptyTaskIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/lists.png"))); // NOI18N
        lblEmptyTaskIcon.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        lblEmptyTaskIcon.setIconTextGap(50);

        lblEmptyTask.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblEmptyTask.setForeground(new java.awt.Color(0, 153, 102));
        lblEmptyTask.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblEmptyTask.setText("There is no task around here! ");
        lblEmptyTask.setVerticalTextPosition(javax.swing.SwingConstants.TOP);

        lblNoTaskAdd.setBackground(java.awt.Color.black);
        lblNoTaskAdd.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblNoTaskAdd.setForeground(java.awt.Color.black);
        lblNoTaskAdd.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblNoTaskAdd.setText("Please select the '+' icon to create a new task");
        lblNoTaskAdd.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout pnlEmptyTaskLayout = new javax.swing.GroupLayout(pnlEmptyTask);
        pnlEmptyTask.setLayout(pnlEmptyTaskLayout);
        pnlEmptyTaskLayout.setHorizontalGroup(
            pnlEmptyTaskLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(pnlEmptyTaskLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pnlEmptyTaskLayout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(pnlEmptyTaskLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(lblEmptyTaskIcon, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblEmptyTask, javax.swing.GroupLayout.DEFAULT_SIZE, 694, Short.MAX_VALUE)
                        .addComponent(lblNoTaskAdd, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 694, Short.MAX_VALUE))
                    .addContainerGap()))
        );
        pnlEmptyTaskLayout.setVerticalGroup(
            pnlEmptyTaskLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(pnlEmptyTaskLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pnlEmptyTaskLayout.createSequentialGroup()
                    .addGap(182, 182, 182)
                    .addComponent(lblEmptyTaskIcon, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(lblEmptyTask)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(lblNoTaskAdd)
                    .addContainerGap(209, Short.MAX_VALUE)))
        );

        pnlTaskList.add(pnlEmptyTask, java.awt.BorderLayout.CENTER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlHead, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pnlProjectTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlProjectList, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlTaskTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlTaskList, javax.swing.GroupLayout.DEFAULT_SIZE, 710, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnlHead, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pnlTaskTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlProjectTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlTaskList, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlProjectList, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    // configuring the functionality of the add a New Project button
    private void btnAddProjectMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAddProjectMouseClicked
        
    //    if (SwingUtilities.isLeftMouseButton(e)){
            
       // }
        
        // Seeting to open the New Project Screen when the button is clicked
        NewProjectDialog projectDialogScreen =  new NewProjectDialog(this, rootPaneCheckingEnabled);
        projectDialogScreen.setVisible(true);
        
        // It will check when the New Project screen is closed, and it will reload the data showing the new Project
        projectDialogScreen.addWindowListener(new WindowAdapter(){
        
            public void windowClosed(WindowEvent e ){
                loadProjects();
            }
        
        });
    }//GEN-LAST:event_btnAddProjectMouseClicked

    // configuring the functionality of the add a New Task button
    private void btnAddTaskMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAddTaskMouseClicked
        
        // Seeting to open the New Task Screen when the button is clicked
        NewTaskDialog taskDialogScreen = new NewTaskDialog(this, rootPaneCheckingEnabled);
        
        // Gathering information that defines the project on which this new task will be created
        taskDialogScreen.setProject(null);
        
        // It will return the index of the selected Project
        int projectIndex =  lstProjects.getSelectedIndex();
        Project project = (Project) projectsModel.get(projectIndex);
        taskDialogScreen.setProject(project);
        
        taskDialogScreen.setVisible(true);
        
        // It will check when the New Task screen is closed, and it will reload the data showing the new Task
        taskDialogScreen.addWindowListener(new WindowAdapter(){
        
            public void windowClosed(WindowEvent e ){
                
                int projectIndex =  lstProjects.getSelectedIndex();
                Project project = (Project) projectsModel.get(projectIndex);
                loadTasks(project.getId());
            }
        });
    }//GEN-LAST:event_btnAddTaskMouseClicked
  
    private void tblTasksMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblTasksMouseClicked
        
        // Event to check the row and the column the user clicked
        int rowIndex = tblTasks.rowAtPoint(evt.getPoint());
        int columnIndex = tblTasks.columnAtPoint(evt.getPoint());
        
        // It will return the index of the selected Project
        int projectIndex =  lstProjects.getSelectedIndex();        
        Project project = (Project) projectsModel.get(projectIndex);
        
        
        int taskIndex = tblTasks.getSelectedRow();
        Task tasks = (Task) taskModel.getTasks().get(taskIndex);
        
        switch (columnIndex){
            case 3:
                // Updating the "isCompleted" check box and saving it on the database
                taskController.update(tasks);
                break;
                
            case 4:                
                // Seeting to open the New Task Screen when the button is clicked
                EditTaskDialog editTaskDialog = new EditTaskDialog(this, rootPaneCheckingEnabled);
        
                // Gathering information that defines the project on which this7 new task will be created
                editTaskDialog.setProject(project);
                editTaskDialog.setTask(tasks);        
                editTaskDialog.setVisible(true);
                
                editTaskDialog.setName(tasks.getName());
        
                // It will check when the Edit Task screen is closed, and it will reload the data showing the new Task
                editTaskDialog.addWindowListener(new WindowAdapter(){
        
                    public void windowClosed(WindowEvent e ){              
                        taskModel.getTasks();
                        loadTasks(project.getId());
                        
                    }
                });
                break;
            case 5:
                // Deleting the Tasks
                taskController.removeById(tasks.getId());
                taskModel.getTasks().remove(tasks);
                
                // Reloading the Task table
              //  int projectIndex =  lstProjects.getSelectedIndex();
               // Project project = (Project) projectsModel.get(projectIndex);
                loadTasks(project.getId());                
                break;          
        }
    }//GEN-LAST:event_tblTasksMouseClicked

    private void lstProjectsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lstProjectsMouseClicked
        
        // Event to check the index of the project selected
        int projectIndex = lstProjects.getSelectedIndex();
        
       
        Project project = (Project)projectsModel.get(projectIndex);
        loadTasks(project.getId());   
        
         
    }//GEN-LAST:event_lstProjectsMouseClicked
    
    private void btnDeleteProjectMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDeleteProjectMouseClicked

        // A dialog pane to check if the user realy want to delete the project!
        // Making sure it wasn't a miss click
        int choice = JOptionPane.showConfirmDialog(null,"Do you wish to delete this project?", "Confirmation", JOptionPane.YES_NO_OPTION);
        
        // Validating the choice
        if (choice == JOptionPane.YES_OPTION){  
            // Iff it is a YES, then the project gonna be deleted
            
            // Event to check the index of the project selected and deleting it
            int projectIndex = lstProjects.getSelectedIndex();
            Project project = (Project)projectsModel.get(projectIndex);
            projectController.removeById(project.getId());
            
            // Loading the Tasks related to the Project selected
            loadProjects();
            loadTasks(project.getId());    
            
        } else if (choice == JOptionPane.NO_OPTION){
            
        }
         
        
    }//GEN-LAST:event_btnDeleteProjectMouseClicked

    /* A method that checks if the list table is empty 
        if it is, it displays the empty tasks screen. 
        If there are tasks registered in the database, it then displays the tasks.
    */
    private void showjTableTasks (boolean hasTasks){
        if(hasTasks) {
            // if is true ( has tasks )
            
            if (pnlEmptyTask.isVisible()) {
                // if the Empty task screen is showing, then it will be removed
                pnlEmptyTask.setVisible(false);
                pnlTaskList.remove(pnlEmptyTask);                
            }
            
            // Seting the Tasks table visible, and seting it to the size of the Taks Panel
            pnlTaskList.add(scrollTasks);
            scrollTasks.setVisible(true);
            scrollTasks.setSize(pnlTaskList.getWidth(), pnlTaskList.getHeight());
        } else {
            // if is false ( there is no tasks added on the database )
            if (scrollTasks.isVisible()){
                // if the Task list is visible it will be removed
                scrollTasks.setVisible(false);
                pnlTaskList.remove(scrollTasks);
            }
            
            // Seting the Empty task screen visible, and seting it to the size of the Taks Panel
            pnlTaskList.add(pnlEmptyTask);
            pnlEmptyTask.setVisible(true);
            pnlEmptyTask.setSize(pnlTaskList.getWidth(), pnlTaskList.getWidth());
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Java swing".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainScreen().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddProject;
    private javax.swing.JButton btnAddTask;
    private javax.swing.JButton btnDeleteProject;
    private javax.swing.JLabel lblDeleteProject;
    private javax.swing.JLabel lblEmptyTask;
    private javax.swing.JLabel lblEmptyTaskIcon;
    private javax.swing.JLabel lblHeadSlogan;
    private javax.swing.JLabel lblHeadTitle;
    private javax.swing.JLabel lblNoTaskAdd;
    private javax.swing.JLabel lblProjectTitle;
    private javax.swing.JLabel lblTaskTitle;
    private javax.swing.JList<String> lstProjects;
    private javax.swing.JPanel pnlEmptyTask;
    private javax.swing.JPanel pnlHead;
    private javax.swing.JPanel pnlProjectList;
    private javax.swing.JPanel pnlProjectTitle;
    private javax.swing.JPanel pnlTaskList;
    private javax.swing.JPanel pnlTaskTitle;
    private javax.swing.JScrollPane scrollProjects;
    private javax.swing.JScrollPane scrollTasks;
    private javax.swing.JTable tblTasks;
    // End of variables declaration//GEN-END:variables

    
    // Method to Customize the Tasks grid
    public void decorateTableTask(){       
        // Customizing the Tasks's header grid
        tblTasks.getTableHeader().setFont(new Font("Segoe UI", Font.BOLD, 14));
        tblTasks.getTableHeader().setBackground(new Color(0, 153, 102));
        tblTasks.getTableHeader().setForeground(new Color(255, 255, 255));
        
        // Creating a automatic sort to the collums of the table
        tblTasks.setAutoCreateRowSorter(true);
        
        // Calling the Cutomized renderes
        tblTasks.getColumnModel().getColumn(2).setCellRenderer(new DeadlineColumnCellRender());
        tblTasks.getColumnModel().getColumn(0).setCellRenderer(new TextColumnCellRender());
        tblTasks.getColumnModel().getColumn(1).setCellRenderer(new TextColumnCellRender());
        tblTasks.getColumnModel().getColumn(4).setCellRenderer(new ButtonColumnCellRender("edit"));
        tblTasks.getColumnModel().getColumn(5).setCellRenderer(new ButtonColumnCellRender("delete"));
    }
    public void initDataController(){
    
        projectController = new ProjectController();
        taskController = new TaskController();
    }    
    public void initComponetsModel() {       
        projectsModel =  new DefaultListModel();
        loadProjects();
        
        taskModel = new TaskTableModel();
        tblTasks.setModel(taskModel);
    
        if (! projectsModel.isEmpty()){
            lstProjects.setSelectedIndex(0);
            Project project = (Project) projectsModel.get(0);
            loadTasks(project.getId());         
        }       
    }   
    //  Method for retrieving information from the database and displaying it in the list model
    public void loadProjects(){
        List<Project> projects = projectController.getALL();
        
        projectsModel.clear();
        
        for (int i = 0; i < projects.size(); i ++){
            
            Project project = projects.get(i);
            projectsModel.addElement(project);        
        }        
        lstProjects.setModel(projectsModel);
    }   
    //  Method for retrieving information from the database and displaying it in the table model
    public void loadTasks(int idProject){
        
        List<Task> tasks = taskController.getAll(idProject);
        taskModel.setTasks(tasks);        
        showjTableTasks(! tasks.isEmpty());
 
    }
}

